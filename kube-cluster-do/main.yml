- name: Play 01 - Define variables
  hosts: main
  tags:
    - setup
  vars_files: 
    - /home/main/env/env.yml
  vars:
    main: "{{ env }}"
    main_host_vars: 
      host_user: "{{ main.host_user }}"
      host_pass: "{{ main.host_pass }}"
      host_ssh_public_key: "{{ main.host_ssh_public_key }}"
    main_aux:  
      master_user_data: "{{ lookup('template', 'data/user_data.master.j2', template_vars=dict(main_host_vars)) | trim }}"
      worker_user_data: "{{ lookup('template', 'data/user_data.worker.j2', template_vars=dict(main_host_vars)) | trim }}"
    masters:
      hosts_group: 'masters'
      hosts_file: "{{ main.hosts_file }}"
      api_token: "{{ main.api_token }}"
      host_user: "{{ main.host_user }}"
      host_pass: "{{ main.host_pass }}"
      droplet_info:
        image_id: "{{ main.master_droplet_info.image_id }}"
        size_id: "{{ main.master_droplet_info.size_id }}"
        private_networking: "{{ main.master_droplet_info.private_networking }}"
        ipv6: "{{ main.master_droplet_info.ipv6 }}"
        wait_timeout: "{{ main.master_droplet_info.wait_timeout }}"
        user_data: "{{ main_aux.master_user_data }}"
      do_tags:      
      - host
      - kube
      droplets: "{{ main.master_droplets }}"
    workers:
      hosts_group: 'workers'
      hosts_file: "{{ main.hosts_file }}"
      api_token: "{{ main.api_token }}"
      host_user: "{{ main.host_user }}"
      host_pass: "{{ main.host_pass }}"
      droplet_info:
        image_id: "{{ main.worker_droplet_info.image_id }}"
        size_id: "{{ main.worker_droplet_info.size_id }}"
        private_networking: "{{ main.worker_droplet_info.private_networking }}"
        ipv6: "{{ main.worker_droplet_info.ipv6 }}"
        wait_timeout: "{{ main.worker_droplet_info.wait_timeout }}"
        user_data: "{{ main_aux.worker_user_data }}"
      do_tags:      
      - host
      - worker
      - web
      droplets: "{{ main.worker_droplets }}"
  tasks:
  - set_fact:
      play_vars:
        main: "{{ main }}"
        masters: "{{ masters }}"
        workers: "{{ workers }}"

###############################################################################

- name: Play 02 - Verify if variables are defined
  hosts: main
  tags:
    - setup
  vars:
    main: "{{ play_vars.main }}"
    masters: "{{ play_vars.masters }}"
    workers: "{{ play_vars.workers }}"
  roles:  
  - role: validation
    api_token: "{{ main.api_token }}"
    host_user: "{{ main.host_user }}"
    host_pass: "{{ main.host_pass }}"
    host_ssh_public_key: "{{ main.host_ssh_public_key }}"
    hosts_file: "{{ main.hosts_file }}"
    log_file: "{{ main.log_file }}"
    setup_last_line: "{{ main.setup_last_line }}"
    initial_connection_timeout: "{{ main.initial_connection_timeout }}"
    setup_finished_timeout: "{{ main.setup_finished_timeout }}"
    kube_network_directory: "{{ main.kube_network_directory }}"
    kube_network_file: "{{ main.kube_network_file }}"
    master_droplet_info: "{{ main.master_droplet_info }}" 
    worker_droplet_info: "{{ main.worker_droplet_info }}" 
    master_droplets: "{{ main.master_droplets }}"
    worker_droplets: "{{ main.worker_droplets }}"
    master_user_data: "{{ masters.droplet_info.user_data }}"
    worker_user_data: "{{ workers.droplet_info.user_data }}"

###############################################################################

- name: Play 03 - Update hosts configuration
  hosts: main
  tags:
    - setup
  vars:
    masters: "{{ play_vars.masters }}"
    workers: "{{ play_vars.workers }}"
  roles:  
  - role: droplets
    hosts_file: "{{ masters.hosts_file }}"
    api_token: "{{ masters.api_token }}"
    host_user: "{{ masters.host_user }}"
    host_pass: "{{ masters.host_pass }}"
    hosts_group: "{{ masters.hosts_group }}"
    droplet_info: "{{ masters.droplet_info }}"
    do_tags: "{{ masters.do_tags }}"
    droplets: "{{ masters.droplets }}"
  
  - role: droplets
    hosts_file: "{{ workers.hosts_file }}"
    api_token: "{{ workers.api_token }}"
    host_user: "{{ workers.host_user }}"
    host_pass: "{{ workers.host_pass }}"
    hosts_group: "{{ workers.hosts_group }}"
    droplet_info: "{{ workers.droplet_info }}"
    do_tags: "{{ workers.do_tags }}"
    droplets: "{{ workers.droplets }}"

###############################################################################

- name: Play 04 - Install and update hosts packages
  hosts: masters:workers
  tags:
    - setup
  become: true
  gather_facts: no
  vars_files: 
    - /home/main/env/env.yml
  vars:
    main: "{{ env }}"
  roles:
  - role: test
    log_file: "{{ main.log_file }}"
    setup_last_line: "{{ main.setup_last_line }}"
    initial_connection_timeout: "{{ main.initial_connection_timeout }}"
    setup_finished_timeout: "{{ main.setup_finished_timeout }}"

  - role: docker

  - role: kube

###############################################################################

- name: Play 05 - Prepare the cluster
  hosts: masters
  tags:
    - cluster
  vars_files: 
    - /home/main/env/env.yml
  vars:
    main: "{{ env }}"
  roles:
  - role: cluster-prepare
    host_user: "{{ main.host_user }}"
    kube_network_directory: "{{ main.kube_network_directory }}"
    kube_network_file: "{{ main.kube_network_file }}"
    kube_etcd_endpoints: "{{ main.kube_etcd_endpoints }}"
    pod_cidr: "{{ main.pod_cidr }}"
    kubeadm_init_params: "{{ main.kubeadm_init_params }}"
  
  - role: cluster-create
    host_user: "{{ main.host_user }}"

###############################################################################

- name: Play 06 - Join the cluster
  hosts: workers
  tags:
    - cluster
  vars_files: 
    - /home/main/env/env.yml
  vars:
    main: "{{ env }}"
  roles:
  - role: cluster-create
    host_user: "{{ main.host_user }}"

###############################################################################

- name: Play 07 - Create and expose a deployment (nginx)
  hosts: masters
  tags:
    - run
  roles:
  - role: deploy

###############################################################################

- name: Play 08 - Reset the cluster
  hosts: masters
  tags:
    # never run, unless the cluster-reset tag is specified
    - never
    - cluster-reset
  vars_files: 
    - /home/main/env/env.yml
  vars:
    main: "{{ env }}"
  roles:
  - role: cluster-reset
    host_user: "{{ main.host_user }}"

###############################################################################
