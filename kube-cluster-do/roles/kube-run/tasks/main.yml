- name: get join command
  become: true
  # become_user: "{{host_user}}"
  shell: kubeadm token create --print-join-command
  register: join_command_raw
  when: "'masters' in group_names"

- name: set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"
  when: "'masters' in group_names"

# - name: set master hosts vars
#   set_fact:
#     master_hosts: "{{ groups['masters'] | map(v -> hostvars[v]) }}"
#   when: "'workers' in group_names"

- name: set master hosts vars
  set_fact: 
    master_hosts: '{{ (master_hosts | default([])) + [hostvars[item]] }}'
  with_items: "{{ groups['masters'] | list }}"
  when: "'workers' in group_names"

- name: verify if there are masters
  fail: 
    msg: "There were no masters found"
  when: ('workers' in group_names) and ((master_hosts | default([])) | length == 0)

- name: TCP port 6443 on masters is reachable from workers
  wait_for: "host={{ item['ansible_default_ipv4']['address'] }} port=6443 timeout=1"
  with_items:
  - "{{ master_hosts }}"
  when: "'workers' in group_names"

- name: join cluster
  become: true
  shell: "{{ hostvars[groups['masters'][0]].join_command }} >> /var/log/node_joined.log"
  when: "'workers' in group_names"